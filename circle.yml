machine:
  environment:
    GOPATH: "/home/ubuntu/.go_workspace"
    PATH: "/home/ubuntu/go/bin:${PATH}:${GOPATH}/bin"
    GOVERSION: "1.5.2"
  services:
    - docker

dependencies:
  cache_directories:
    - "/home/ubuntu/go"
  pre:
    - gem install package_cloud
    - go get github.com/tarm/goserial
  override:
    - CURRENTGOVERSION=`go version | awk '{print $3}'`
    - if [[ ! -e /home/ubuntu/go/bin/go ]]; then cd /home/ubuntu; curl https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz | tar -xz; fi
    - if [[ "go${GOVERSION}" != ${CURRENTGOVERSION} ]]; then cd /home/ubuntu; rm -rf go; curl https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz | tar -xz; fi

test:
  override:
    - go version
    - which go
    - go build -v
    - docker run --rm golang:1.4.1-cross go get github.com/tarm/goserial
    - docker run -v "$PWD":/usr/src/myapp -w /usr/src/myapp -e GOOS=linux -e GOARCH=arm golang:1.4.1-cross go build -v
    - go test -coverpkg github.com/kgbu/gorandom ./tests/*_test.go


deployment:
  production:
    branch: master
    commands:
      - if [ -f ./packages ] ; then  rm -rf ./packages ; fi
      - mkdir -p ./packages/usr/local/gorandom/{bin,etc}
      - GOARM=5 gox -build-toolchain
      - gox -os="linux" -arch="arm" "github.com/kgbu/gorandom/cmd/gorandom"
      - cp gorandom_linux_arm ./packages/usr/local/gorandom/bin/gorandom
      - cd packages; $(FPM) -s dir -t deb -a armhf -n fuji-gw -v `cat ./tag` .
      - package_clound push kgbu/gorandom/linux/0.0.`cat ./tag` ./packages/gorandom_`cat ./tag`_armlt.deb
